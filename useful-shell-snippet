#encrypt file using openssl
openssl aes-256-cbc -a -salt -in <inputfile> -out <output file>
#descrypt file
openssl aes-256-cbc -d -a -in <inputfile> -out <output file>

#if on windows use winpty to run openssl winpty openssl ......

#adding date
exp_date=$(date -d '1 day' +%Y-%m-%dT%H:%M:%SZ)

#function to parse arguments
function get-args()
{
    key=$1
    map=${@:2}
    value=$(echo $map | sed -e "s/.*--${1}=\([^ ]*\).*/\1/" -e 's/:SP:/ /g'  )
    #value=$(echo $map | sed -e "s/.*--${1}=\([^--]*\).*/\1/" -e 's/:SP:/ /g'  )
    #value=$(echo $map | sed -e "s/\(*\)\(--${1}=[^ ]*\)\(.*\)/\2/"  )

    #compare
    if [[ ${#value} == ${#map} ]] || [[ "$key" == "$value" ]] #did not find the key
    then
       value=""
    fi
    echo "$value"

}
#usage of get-args
repo_folder="$(get-args root-folder $@)"

 earliest_expiry=$( echo "$expiring_cert" |  tools/jq -r '.certificates | min_by(.valid_until) | .valid_until | (fromdate-now)/86400 | floor')
 
 cat <<EOF
       <table style=\"border:1px solid black\"><tr><th>CA</th><th>Configurable?</th><th>Expiring On</th><th>Expiring in (days)</th><th>Used By</th><th>Location</th><th>Path</th></tr>
       $(echo "$1" | tools/jq -r '.[] | "<tr><td>\(.is_ca)</td><td>\(.configurable)</td><td>\(.valid_until)</td><td>\(.valid_until | (fromdate-now)/86400 | floor) </td><td>\(.product_guid)</td><td>\(.location)</td><td>\(if .variable_path != null then .variable_path else "" end )</td></tr>"')
       </table

